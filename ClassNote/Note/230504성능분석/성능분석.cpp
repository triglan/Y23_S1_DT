/*
	* 공부해 올 내용
	* Tree 공부해와라 가장 중요하다.
	* 용어들 위주로 공부해와라 

	DS11
	DS_Large.txt 파일을 줄꺼임
	LOLDIC에서 쓰던거
	포지션 이름(전부 다 다름) 체력 공격력 방어력
	MID K45453 1234 1234 1234
	
	GoogleDrive에서 다운받음
	열면 지옥이 펼쳐짐 - 2천만개 정보 있음

	MakeSL 단반향 선형 연결리스트, 수행시간 출력
	main함수 위에 시스템, 아래에 시스템 불러서 출력

	PrintAllSL 1천개 단위로 출력 -> 이것도 오래걸리면 1만개 단위로

	Sort - 노드 자체를 바꿔야함, 수행시간 출력, 출력은 아님 검사할 때 Print해서 검사할꺼임

	FindTarget

	목적 - 연결리스트 다시 연습, 파일입출력, 데이터가 많을 때 어떤 일이 벌어지는지 보자

	함수마다 수행시간 출력,


	----------------------------성능분석----------------------------------

	
	알고리즘 효율
	1. 메모리 사용량
	2. 속도
	
	공간 복잡도
	= 권장 사양의 메모리
	고정공간사용량 - 프로그램을 실행할 때 기본적으로 사용되는 양, 양이 정해져 있음(ex 변수들, 코드 자체들의 메모리)
	가변공간사용량 - 프로그램이 실행됨에 따라 추가로 요구되는 메모리(malloc 할당, 함수 호출)

	시간 복잡도
	= 프로그램을 실행하여 완료하는데 필요한 시간
	Q. 어떻게 프로그램의 수행 시간을 예측할 수 있을까?

	A. 수행 명령어의 개수 * 평균 수행 시간?
		-> 제일 큰 거 부터 계산한다, 작은건 굳이 안넣는다.(여행 경비 계산)

	A. 메모리 액세스 횟수 * 메모리 액세스 시간?(메모리 액세스가 가장 비용이 크기 때문에, 하드는 자료구조 영역이 아니여서 ㄴㄴ)
		
		EX) a,b는 계수
		1. for (n번)			->a*N
		2. for (n번){		->b*n^2
			for(n번)}
		3. 반복x				->c 상수

		bN + aN^2 + c => O(N^2) ==> BigO 표기법, 읽는 법 O드 of N^2 
		N과 N^2의 차이는 차원이 다를 정도로의 크기 차이
		
		롤 티어 햇갈리면 안되듯이 BigO순서도 햇갈리면 안된다.

	O() : 1 < logn < n < nlogn(여기까지 쓸만 함) < n^2 < n^3 < *** < 2^n < *** < n!
*/