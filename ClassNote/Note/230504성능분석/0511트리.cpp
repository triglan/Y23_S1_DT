/*
	DS12인듯?
	DS13 : DS_Large
	1. SortByName_SL() 이미 한거
	내부 자료구조를 이진 탐색 트리 구조로 변경해서 3~7해라.

	DS13 : 5/26 자유롭게 공부해라?
	6/2 중간고사
	6/8 기말고사 예정? 1시간이면 충분하다..?
	2교시 3교시 시험 볼 예정
	2교시에 볼 사람은 2교시에 보고 3교시에 볼사람은 3교시에 봐라.
	2교시를 11시25분에 끝나고 3교시는 11시25분에 바로 시험 시작 할꺼임. -> 확정은 아님

	공부해올 내용 - 이진트리
	이진트리란?
	이진트리의 종류 - 트리의 차수가 0이면 하나만 있는거, 트리의 차수가 1이면 연결리스트, 트리의 차수가 2개있는건 이진 트리// (포화 완전 사향) 이진 트리
	이진트리의 성질
	이진트리의 구현 방법
	이진트리의 운행 방법
	
	문제마다 배점이 다름 10점~50점 열몇문제중에서
	두문제만 선택해서 ex 50점자리 2개 풀면 100점이 되고 10점 2개 풀면 20점
	2문제 전부 다 연결리스트 또는 트리 문제를 풀어야 F면제

	줄 수로 따지면 몇줄 안된다.
	재귀를 쓰면 된다. 공부를 미리 하면 쉽게 할 수 있을 거다.

	배열 함수 쓰는 문제도 있지만 F냐 C냐 인듯

	무조건 트리 연결리스트로만 풀어야 된다고 생각하면 됌.

	50점짜리 2개 풀었다가 버그 나오면 x..
	너무 꿈을 높게 갖지 말자.. 전략적인 접근이 필요하다.

	30점 짜리 가장 쉬운거 하나 풀어놓고 50점 짜리 2개 도전하면
	1. 적어도 80은 되잖아. 3개 문제를 풀려고 하자.
	2. 연관성 있는 문제가 있다. 비슷한 계열의 문제가 2개가 있으면 
	학점 잘 맞았았고 중간 80~90 맞으면 학점 잘 받을 듯

	트리에서의 삭제, 단방향 선형리스트의 삽입 등의 문제를 예시로 듬


	트리
	지금까지 했던 검색 방법 - 순차 검색 = 오도오브 N
	데이터 관리 - 검색, 삽입, 삭제 / 검색의 연산이 데이터 관리의 대부분을 차지함, 오도오브N은 좀 아쉽다

	EX) 답안지를 찾으려는데 내 답안지를 어떻게 찾을까? -> 순차검색
	==> 근데 만일 학번 순서대로 정렬되어 있으면? -> UP & DOWN 으로 찾아봄 = 이진 검색, 오도오브 log N    O(log N)

	
	왜 순차검색은 오도오브 N인데 이진 검색은 오도오브 log N인가?
	1. 순차 검색은 하나 검색할 때 마다 서치스페이스 - 1, 서치 스페이스가 정렬적으로 줄어듦
	2. 이진 검색은 하나 검색할 때 마다 서치스페이스 / 2, 서치 스페이스가 정률적으로 줄어듦

	이진 검색 가능 조건
	1. 정렬되어 있어야함.
	2. 서치스페이스의 크기ㅡㄹ 알아야 함


	//분할이란? : 나누는거
	//교차하지 않는 분리 집합 : 2번 분할한다면 교집합도 빈 곳도 없게 나누는 것

	트리의 정의		// 일단 정의란? : 내가 정확하게 전달할 수 있는가? + 상대방이 내 말을 듣고 이해할 수 있는가?
	1. 하나 이상의 노드로 구서된 유한 집합
		1) 루트라는 특별한 노드가 있다.
		2) 나머지 노드들은 다시 각각이 트리이면서 교차하지 않는 분리 집합으로 분리된다.
		이들은 루트의 서브트리라고 한다.
		루트 - 서브트리 * ??? 이게 재귀되는 느낌
		==> 노드가 없으면 트리가 아니기에(루트만 있으면) 저 정의에 살짝 문제는 있지만 대충 개념만..
		루트 노트 = Level 1 서브트리 - 2~4
		-> 트리 Level 2, 서브트리 3~4
		-> ~~~
		-> 마지막 노드(Leaf) 나뭇잎 노드

	2. 루트라는 특별한 노드를 가지는 사이클이 존재하지 않는 그래프			//사이클은 나중에
		->지금 이해하란 소린 x
		

	트리의 용어
	자식노드, 부모 노드, 형제 노드
	트리의 차수는 자식의 수만큼이다, 그래서 LEAF노드는 0차임. ,, 트리의 차수는 가장 많은거, 즉 예시에선 3차다
	트리의 높이는 3레벨(가장 높은 레벨)

	기말은 트리의 차수 + 트리의 높이 이런식으로 나옴
*/