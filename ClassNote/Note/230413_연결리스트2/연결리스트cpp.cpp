/*

	DS8 다음주 시험
	insert 특별한 조건은 없음
	1차원 배열에 초기 유닛 리스트까지 업로드 가능

	그 배열 상태의 유닛리스트를 받아서 단방향 환형 연결리스트 구조로 바꿔서
	MakeUL_SL()을 구현해라.

	3. 아무대나 넣어도 된다. 유닛 모든 정보는 입력 받자
	4. 배열에서의 삭제는 배열은 데이터만 삭제할 수 있고 공간 삭제는 x,
		연결리스트는 데이터만 삭제하지 않고 노드 자체를 뺀다. 비어있는 노드 있으면 x 
		Q. 노드 연결을 3번 뺴고 2->4번 가리키면 되나? ㅇㅇ 가르켜주신 것처럼
	7. ID순서 알파벳 순서로 정렬하는 함수 이 떄 노드 자체를 이동
		퀵정렬 언젠가 구현하라 하니 할 줄 알면 좋음
		노드의 데이터를 변경하지 말고 노드 자체를 이동한다. 그거 연습하려고 하는 거니까.

		명령어 연속적으로 실행할 수 있게 짜야함.

		스택과 큐 공부해온다.


	연결리스트 검사
	for(p=hp; p->next != NULL; p=p->next)
	
	환형 연결리스트 차이점
		맨 끝에있는 노드가 맨 앞의 주소를 가리킨다

	연결리스트의 삭제
		1. 삭제할 데이터를 찾는다
		2. 지운다.

		ex) struct = a { hp, mp }
		a[1].hp = 10, a[2].hp = 20 -> a[3].hp = 30  *** a[10].hp = 100 // delete a[3]
		-> a[1].hp = 10, a[2].hp = 20 -> a[4].hp = 40, *** a[10].hp = 100

		3번을 지우고 싶으면 2번 주소를 4번으로 연결시키면 된다.

		ppt 참고
		p=p->next;
		or hpp->next->next->next

		지우려면 삭제할 노드가 아닌 앞의 노드를 가리켜야 한다
			for(p=hpp; p->next != NULL; p=p->next)
				if(p->hp == target) break;
			=> for(p=hpp; p->next != NULL; p=p->next)
			****if(p->next->hp = target) break; 
		
		이코드의 문제점 첫번째 노드를 검사 안하거나 마지막 노드가 NULL을 가리켜서 오류를 뱉음.

		무한루프, 세그먼트 폴트 => 이 연결리스트를 잘못 설정했구나
		이거 보통 화살표 여러개 썼을 떄 생긴다.

		이런점 때문에 단방향보다 양방향이 쉽다.

	특정한 자리에 단일 연결리스트 삽입
		1. 정렬된 특정한 자리에 삽입하기 위해 삽입할 자리의 앞 노드를 찾는다.
		2. 집어 넣는다.
			//순서 중요 달라지면 무한루프 돌아버림
			new->next = p->next	//new의 next가 p의 next를 가리키게 한다.
			p->next = new		//p의 next가 new를 가리키게 한다

		순서 햇갈리지 않는 TIP
			기존의 값은 의미있는 값.
			new의 값은 아직 쓰레기 값.
			1. 그럼 의미 있는 값은 되도록 나중에 수정하고
			2. 의미 없는 것 부터 항상 먼저 한다.

	양방향 연결리스트 삽입
	//순서상 의미없는 값이 있는 new부터 수정한다.
		new->next = p->next		//new의 next는 p의 next를 가리킴
		new->prev = p			//new의 prev는 p를 가리킴
		p->next = new			//p의 next는 new를 가리킴
		p->next->prev = new		//p->next 부분의 prev가 new를 가리킴

		
*/